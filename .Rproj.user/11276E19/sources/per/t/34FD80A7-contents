---
title: "causalAB"
author: "haiyan yu"
date: "12/16/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

DiabetesMed(T0) Metformin(T1) Glipizide(T2) Glyburide(T3)



```{r pressure, echo=FALSE}
#import us130_causalAB
head(us130causalAB)
cab.df<-us130causalAB[,c(1:8,12:13)]
head(cab.df)
```


```{r}
###matchit
library("MatchIt")
cab.dfm<-cab.df
names(cab.dfm)<-c("x1","x2","x3","x4","x5","t1", "t2","t3","t0","y")
cab.dfmxy <- cab.dfm[complete.cases(cab.dfm), ]
apply(cab.dfmxy,2,mean)
head(cab.dfmxy, 1)
 
cab.dfmxy<-cab.dfmxy[cab.dfmxy$x1!='Other',]
cab.dfmxy<-cab.dfmxy[cab.dfmxy$x1!='?',]
cab.dfmxy$x1<-as.numeric(cab.dfmxy$x1)
cab.dfmxy <- cab.dfmxy[complete.cases(cab.dfmxy), ]
 

for (i in seq(1, nrow(cab.dfmxy)))
{
for (Tt in c("t1","t2","t3"))
{
   if ((cab.dfmxy[i,Tt]!=0) ){
     cab.dfmxy[i,Tt]<- 1
   }
 else if((cab.dfmxy[i,Tt]==0) && (cab.dfmxy[i,"t0"]!=0)) {
     cab.dfmxy[i,Tt]<- 10
 }
}
}
head(cab.dfmxy, 20)
max(cab.dfmxy[,Tt])

#sample size


us130cab.sz<-data.frame()
for (Tt in c("t1","t2","t3")){
  ncont<-nrow(cab.dfmxy[cab.dfmxy[,Tt]==0,])
ntreat<-nrow(cab.dfmxy[cab.dfmxy[,Tt]==1,])

  cab.sz <-
    data.frame(
    Tt
    ,ncont
    ,ntreat
    )
  us130cab.sz<-rbind(us130cab.sz,cab.sz)
}

  head(us130cab.sz)
```

```{r}
#  for (Tt in c(t1,t2,t3)){ 
cab.df<-data.frame()

for (j in 1:3){
cabformula<-data.frame()
cab.dfmxt<-data.frame()
if (j==1) {
      Tt<-"t1"
      cabformula<-t1~x1 +x2 +x3 +x4 +x5
        cab.dfmxt<-cab.dfmxy[cab.dfmxy$t1 ==1 | cab.dfmxy$t1 == 0,]

    }
    else if(j==2){
      Tt<-"t2"
      cabformula<-t2~x1 +x2 +x3 +x4 +x5
        cab.dfmxt<-cab.dfmxy[cab.dfmxy$t2 ==1 | cab.dfmxy$t2 ==0,]
    }
    else {
     Tt<-"t3" 
     cabformula<-t3~x1 +x2 +x3 +x4 +x5
#      cab.dfmxt<-cab.dfmxy[cab.dfmxy$t3!=10,]
     cab.dfmxt<-cab.dfmxy[cab.dfmxy$t3 ==1 | cab.dfmxy$t3 ==0,]
    }
#     }
max(cab.dfmxt$t2)
#cabformula<-Tt~x1 +x2 +x3 +x4 +x5
#cab.dfmxty<-data.matrix(cab.dfmxt)
cabout<-matchit(cabformula, cab.dfmxt, method = "nearest", distance = "logit",
        distance.options = list(),
        reestimate = FALSE)
summary(cabout)
cab.index<-cabout$match.matrix[,1]

#cweight_df[mindex[1],]
cab.cont.mat<-cab.dfmxt[cab.index,]
cab.cont.mean <- apply(cab.cont.mat, 2, mean)
cab.mean.cy<-cab.cont.mean[10]
cab.c.sd<-sd(data.matrix(cab.cont.mat[,"y"]))

if (j==1){
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t1==1,]
  }
  else if (j==2){
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t2==1,]
  }
  else {
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t3==1,]
  }
 
cab.treat.mean <- apply(cab.treat.mat, 2, mean)
cab.mean.tedy<-cab.treat.mean[10]
cab.ted.sd<-sd(data.matrix(cab.treat.mat[,"y"]))


  cab.sum <-
    data.frame(
      j,
      cab.mean.cy=round(cab.mean.cy,3) ,
      cab.c.sd=round(cab.c.sd,3),
      cab.mean.tedy=round(cab.mean.tedy,3) ,
      cab.ted.sd=round(cab.ted.sd,3)
      )
  cab.df<-rbind(cab.df, cab.sum)
  cab.df
  
  
 cab.mat.df<-rbind(cab.treat.mat,cab.cont.mat)
  # for (j in 1:3){
    if (j==1) {
     write.csv(cab.mat.df[,c(1:5,6,10)], "cab.mat.1t.csv")
    }
    else if(j==2){
#      write.csv(cab.mat.df[,c(1:5,"t2","y")], "cab.mat.2t.csv")
            write.csv(cab.mat.df[,c(1:5,7,10)], "cab.mat.2t.csv")
    }
    else {
     write.csv(cab.mat.df[,c(1:5,8,10)], "cab.mat.3t.csv")
    }
  # }
}
#summary(cabout)
```

##Matching among the treatments 1, 2, and 3.

```{r}
cab.df<-data.frame()

for (jk in 1:3){
cabformula<-data.frame()
#cab.dfmxt<-data.frame()
if (jk==1) {
      Tt<-"t12t"
      cabformula<-t12t~x1 +x2 +x3 +x4 +x5
      cab.df12t<-rbind(cab.dfmxy[cab.dfmxy$t1 == 1 & cab.dfmxy$t2 != 1, ],
                       cab.dfmxy[cab.dfmxy$t2 == 1  & cab.dfmxy$t1 != 1, ])
      head(cab.df12t)
      nrow(cab.df12t)
      nrow(cab.df12t[cab.df12t$t1==1,])
      nrow(cab.df12t[cab.df12t$t1!=1,])
      cab.df12t$t12t<-0
      nrow(cab.df12t[cab.df12t$t1==1,])>nrow(cab.df12t[cab.df12t$t1!=1,])
      cab.df12t[cab.df12t$t2==1,"t12t"]<-1
      sum(cab.df12t$t12t)
      cab.dfmxt<-cab.df12t
    }
    else if(jk==2){
      Tt<-"t13t"
      cabformula<-t13t~x1 +x2 +x3 +x4 +x5
      cab.df13t<-rbind(cab.dfmxy[cab.dfmxy$t1 == 1 & cab.dfmxy$t3 != 1, ],
                       cab.dfmxy[cab.dfmxy$t3 == 1  & cab.dfmxy$t1 != 1, ])
      cab.df13t$t13t<-0
      nrow(cab.df13t[cab.df13t$t1==1,])>nrow(cab.df13t[cab.df13t$t1!=1,])
      cab.df13t[cab.df13t$t3==1,"t13t"]<-1
      sum(cab.df13t$t13t)
      cab.dfmxt<-cab.df13t
    }
    else {
     Tt<-"t23t" 
     cabformula<-t23t~x1 +x2 +x3 +x4 +x5
       cab.df23t<-rbind(cab.dfmxy[cab.dfmxy$t2 == 1 & cab.dfmxy$t3 != 1, ],
                   cab.dfmxy[cab.dfmxy$t3 == 1  & cab.dfmxy$t2 != 1, ])
  
      cab.df23t$t23t<-0
      nrow(cab.df23t[cab.df23t$t2==1,])>nrow(cab.df23t[cab.df23t$t2!=1,])
      cab.df23t[cab.df23t$t2==1,"t23t"]<-1
      sum(cab.df23t$t23t)
     cab.dfmxt<-cab.df23t
    }
library("MatchIt")
cabout<-matchit(cabformula, cab.dfmxt, method = "nearest", distance = "logit",
        distance.options = list(),
        reestimate = FALSE)
    summary(cabout)
    cab.index<-cabout$match.matrix[,1]
    
    #cweight_df[mindex[1],]
    cab.cont.mat<-cab.dfmxt[cab.index,]
    cab.cont.mean <- apply(cab.cont.mat, 2, mean)
    cab.mean.cy<-cab.cont.mean[10]
    cab.c.sd<-sd(data.matrix(cab.cont.mat[,"y"]))

if (jk==1){
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t12t==1,]
  }
 else if (jk==2){
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t13t==1,]
 }
else {
    cab.treat.mat<-cab.dfmxt[cab.dfmxt$t23t==1,]
  }
 
cab.treat.mean <- apply(cab.treat.mat, 2, mean)
cab.mean.tedy<-cab.treat.mean[10]
cab.ted.sd<-sd(data.matrix(cab.treat.mat[,"y"]))


  cab.sum <-
    data.frame(
      jk,
      cab.mean.cy=round(cab.mean.cy,3) ,
      cab.c.sd=round(cab.c.sd,3),
      cab.mean.tedy=round(cab.mean.tedy,3) ,
      cab.ted.sd=round(cab.ted.sd,3)
      )
  cab.df<-rbind(cab.df, cab.sum)
  
  
 cab.mat.df<-rbind(cab.treat.mat,cab.cont.mat)
 head(cab.treat.mat,1)
    if (jk==1) {
     write.csv(cab.mat.df[,c(1:5,10:11)], "cab.mat.t12t.csv")
    }
    else if(jk==2){
      write.csv(cab.mat.df[,c(1:5,10:11)], "cab.mat.t13t.csv")
    }
    else {
     write.csv(cab.mat.df[,c(1:5,10:11)], "cab.mat.t23t.csv")
    }
}

  head(cab.df12t)
  head(cab.df13t)
  head(cab.df23t)
  head(cab.df)
  head(cab.mat.df)#after adjusted
```




